<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('partials/logo.ejs') %>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Subjects</title>
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
</head>
<body>
    <%- include('partials/nav.ejs') %>
    <div class="list flex">
      <% subjects.forEach(subject => { %>
        <div id="<%= subject.title %>-div" style="height: 100px;"></div>
        <div class="list_item flex" >
            <div class="title_div">
                    <button id="delete_<%= subject.title %>" class="delete_subject transparent hover-button">â¤¬</button>
                <a href="/dashboard#<%= subject.title %>" style="text-decoration: none; color: black;" class="subject_name" ><%= subject.title %></a>
            </div>
            <div class="secondary grid-container">
                <div class="flex spans rotate_270">
                    <p class="subject_avg"> AVG: <%= subject.avg.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) %></p>
                </div>
                <div class="plot" id='<%= subject.title %>'>
                </div>
                

            </div>
      </div>
      <script>
        document.getElementById("delete_<%= subject.title %>").addEventListener("click", function() {
            if(confirm("Are you sure you want to delete this subject")){
                fetch('/subjects/delete', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ name: '<%= subject.title %>' })
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    document.getElementById("<%= subject.title %>-div").remove();
                    this.parentElement.parentElement.remove();
                })
                .catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                });
            }
        })
      </script>
      
    <% }); %>
      
        
        <div class="add-new">
          <a href="/subjects/add">ADD NEW +</a>
        </div>
        


    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const buttons = document.querySelectorAll('.hover-button');
        
            buttons.forEach(button => {
                button.addEventListener('mouseenter', function() {
                    this.parentElement.classList.add('parent-hover');
                });
        
                button.addEventListener('mouseleave', function() {
                    this.parentElement.classList.remove('parent-hover');
                });
            });
        });
        </script>
    <script>
      function calculateDesiredWidth(percentageToLeaveOut) {
          const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
          const desiredWidth = screenWidth - (screenWidth * (percentageToLeaveOut / 100));
          return desiredWidth;
      }
      let y;
      let x;
      
    </script>
    <% subjects.forEach(subject => { %>
    <script>
      
      x =[];
      y =[<%= subject.marks %>];
      for(let i = 2; i < y.length + 2; i++){
          x.push(i);
      }
        var data = {
            y: y,
            x: x,
            type: 'bar',
            textposition: 'auto'
        };
        
        var layout = {
            yaxis: {
                range: [1.5, 6.5],
            },
            xaxis: {
                showticklabels: false
            },
            width: calculateDesiredWidth(45) > 600 ? calculateDesiredWidth(45) : 600,
            height: 350,
            margin: {
                l: 10,
                r: 30,
                t: 50,
                b: 50 
            }
        };
        
        var config = {
            showLink: true,
            plotlyServerURL: "https://chart-studio.plotly.com", 
            staticPlot: true
        };
  
        Plotly.newPlot('<%= subject.title %>', [data], layout, config);
    
    </script>
    <% }); %>
</body>



</html>